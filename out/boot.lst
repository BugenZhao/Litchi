     1                                  	org	0x7c00
     2 00000000 E98F00                  	jmp	Entry
     3                                  
     4                                  BaseOfStack		equ	0x7c00	; 栈底，向低地址生长
     5                                  BaseOfLoader		equ	0x9000	; Loader 加载基址
     6                                  OffsetOfLoader		equ	0x100	; Loader 加载偏移
     7                                  RootDirSectors		equ	14	; 根据根目录 224 项得到
     8                                  SectorNoOfRootDirectory	equ	19	; 根目录开始扇区号，第二个 FAT 表
     9                                  
    10                                  ; Standard FAT12 floppy code
    11 00000003 90                      	DB	0x90
    12 00000004 425A4C4954434849        	DB	"BZLITCHI"		; 启动扇区名称（8字节）
    13 0000000C 0002                    	DW	512			; 每个扇区（sector）大小（必须512字节）
    14 0000000E 01                      	DB	1			; 簇（cluster）大小（必须为1个扇区）
    15 0000000F 0100                    	DW	1			; FAT起始位置（一般为第一个扇区）
    16 00000011 02                      	DB	2			; FAT个数（必须为2）
    17 00000012 E000                    	DW	224			; 根目录大小（一般为224项）
    18 00000014 400B                    	DW	2880			; 该磁盘大小（必须为2880扇区1440*1024/512）
    19 00000016 F0                      	DB	0xf0			; 磁盘类型（必须为0xf0）
    20 00000017 0900                    	DW	9			; FAT的长度（必??9扇区）
    21 00000019 1200                    	DW	18			; 一个磁道（track）有几个扇区（必须为18）
    22 0000001B 0200                    	DW	2			; 磁头数（必??2）
    23 0000001D 00000000                	DD	0			; 不使用分区，必须是0
    24 00000021 400B0000                	DD	2880			; 重写一次磁盘大小
    25 00000025 000029                  	DB	0,0,0x29		; 意义不明（固定）
    26 00000028 FFFFFFFF                	DD	0xffffffff		; （可能是）卷标号码
    27 0000002C 425A4C49544348494F-     	DB	"BZLITCHIOS "		; 磁盘的名称（11字，不足填空格）
    27 00000035 5320               
    28 00000037 4641543132202020        	DB	"FAT12   "		; 磁盘格式名称（8字，不足填空格）
    29 0000003F <res 00000012>          	RESB	18			; 先空出18字节
    29          ******************       warning: uninitialized space declared in .text section: zeroing [-w+other]
    30                                  
    31                                  
    32 00000051 48656C6C6F2C204C69-     HelloMessage:		db	"Hello, Litchi!", 0x0d, 0x0a, "BugenZhao 2020", 0x0d, 0x0a
    32 0000005A 74636869210D0A4275-
    32 00000063 67656E5A68616F2032-
    32 0000006C 3032300D0A         
    33 00000071 426F6F74696E672E2E-     BootMessage:		db	"Booting..."
    33 0000007A 2E                 
    34                                  MessageEnd:
    35                                  
    36                                  ClearScreen:
    37 0000007B B80300                  	mov	ax, 0x0003
    38 0000007E CD10                    	int	0x10					; clear screen
    39 00000080 C3                      	ret
    40                                  
    41                                  DispStr:
    42                                  	; message in %di, end in %si
    43 00000081 89FD                    	mov	bp, di					; string address
    44 00000083 89F1                    	mov	cx, si
    45 00000085 29F9                    	sub	cx, di					; calculate string length
    46 00000087 B80113                  	mov	ax, 0x1301				; ah=0x13 (write string)
    47 0000008A BB0D00                  	mov	bx, 0x000d				; bh=0x00 (page), bl=0x0d (color)
    48 0000008D 30D2                    	xor	dl, dl					; row:col = 0:0
    49 0000008F CD10                    	int	0x10
    50 00000091 C3                      	ret
    51                                  
    52                                  Entry:
    53 00000092 8CC8                    	mov	ax, cs
    54 00000094 8ED8                    	mov	ds, ax
    55 00000096 8EC0                    	mov	es, ax
    56 00000098 8ED0                    	mov	ss, ax
    57 0000009A BC0001                  	mov	sp, 0100h
    58 0000009D E8DBFF                  	call	ClearScreen
    59 000000A0 BF[5100]                	mov	di, HelloMessage			; string
    60 000000A3 BE[7100]                	mov	si, BootMessage				; string end
    61 000000A6 E8D8FF                  	call	DispStr
    62                                  
    63                                  Fin:
    64 000000A9 F4                      	hlt
    65 000000AA EBFD                    	jmp	Fin
