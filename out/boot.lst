     1                                  %include	"pm.inc"
     1                              <1> 
     2                              <1> 
     3                              <1> ; 描述符图示
     4                              <1> 
     5                              <1> ; 图示一
     6                              <1> ;
     7                              <1> ;  ------ ┏━━┳━━┓高地址
     8                              <1> ;         ┃ 7  ┃ 段 ┃
     9                              <1> ;         ┣━━┫    ┃
    10                              <1> ;                  基
    11                              <1> ;  字节 7 ┆    ┆    ┆
    12                              <1> ;                  址
    13                              <1> ;         ┣━━┫ ② ┃
    14                              <1> ;         ┃ 0  ┃    ┃
    15                              <1> ;  ------ ┣━━╋━━┫
    16                              <1> ;         ┃ 7  ┃ G  ┃
    17                              <1> ;         ┣━━╉──┨
    18                              <1> ;         ┃ 6  ┃ D  ┃
    19                              <1> ;         ┣━━╉──┨
    20                              <1> ;         ┃ 5  ┃ 0  ┃
    21                              <1> ;         ┣━━╉──┨
    22                              <1> ;         ┃ 4  ┃ AVL┃
    23                              <1> ;  字节 6 ┣━━╉──┨
    24                              <1> ;         ┃ 3  ┃    ┃
    25                              <1> ;         ┣━━┫ 段 ┃
    26                              <1> ;         ┃ 2  ┃ 界 ┃
    27                              <1> ;         ┣━━┫ 限 ┃
    28                              <1> ;         ┃ 1  ┃    ┃
    29                              <1> ;         ┣━━┫ ② ┃
    30                              <1> ;         ┃ 0  ┃    ┃
    31                              <1> ;  ------ ┣━━╋━━┫
    32                              <1> ;         ┃ 7  ┃ P  ┃
    33                              <1> ;         ┣━━╉──┨
    34                              <1> ;         ┃ 6  ┃    ┃
    35                              <1> ;         ┣━━┫ DPL┃
    36                              <1> ;         ┃ 5  ┃    ┃
    37                              <1> ;         ┣━━╉──┨
    38                              <1> ;         ┃ 4  ┃ S  ┃
    39                              <1> ;  字节 5 ┣━━╉──┨
    40                              <1> ;         ┃ 3  ┃    ┃
    41                              <1> ;         ┣━━┫ T  ┃
    42                              <1> ;         ┃ 2  ┃ Y  ┃
    43                              <1> ;         ┣━━┫ P  ┃
    44                              <1> ;         ┃ 1  ┃ E  ┃
    45                              <1> ;         ┣━━┫    ┃
    46                              <1> ;         ┃ 0  ┃    ┃
    47                              <1> ;  ------ ┣━━╋━━┫
    48                              <1> ;         ┃ 23 ┃    ┃
    49                              <1> ;         ┣━━┫    ┃
    50                              <1> ;         ┃ 22 ┃    ┃
    51                              <1> ;         ┣━━┫ 段 ┃
    52                              <1> ;
    53                              <1> ;   字节  ┆    ┆ 基 ┆
    54                              <1> ; 2, 3, 4
    55                              <1> ;         ┣━━┫ 址 ┃
    56                              <1> ;         ┃ 1  ┃ ① ┃
    57                              <1> ;         ┣━━┫    ┃
    58                              <1> ;         ┃ 0  ┃    ┃
    59                              <1> ;  ------ ┣━━╋━━┫
    60                              <1> ;         ┃ 15 ┃    ┃
    61                              <1> ;         ┣━━┫    ┃
    62                              <1> ;         ┃ 14 ┃    ┃
    63                              <1> ;         ┣━━┫ 段 ┃
    64                              <1> ;
    65                              <1> ; 字节 0,1┆    ┆ 界 ┆
    66                              <1> ;
    67                              <1> ;         ┣━━┫ 限 ┃
    68                              <1> ;         ┃ 1  ┃ ① ┃
    69                              <1> ;         ┣━━┫    ┃
    70                              <1> ;         ┃ 0  ┃    ┃
    71                              <1> ;  ------ ┗━━┻━━┛低地址
    72                              <1> ;
    73                              <1> 
    74                              <1> 
    75                              <1> ; 图示二
    76                              <1> 
    77                              <1> ; 高地址………………………………………………………………………低地址
    78                              <1> 
    79                              <1> ; |   7   |   6   |   5   |   4   |   3   |   2   |   1   |   0    |
    80                              <1> ; |7654321076543210765432107654321076543210765432107654321076543210|	<- 共 8 字节
    81                              <1> ; |--------========--------========--------========--------========|
    82                              <1> ; ┏━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━┓
    83                              <1> ; ┃31..24┃   (见下图)   ┃     段基址(23..0)    ┃ 段界限(15..0)┃
    84                              <1> ; ┃      ┃              ┃                      ┃              ┃
    85                              <1> ; ┃ 基址2┃③│②│    ①┃基址1b│   基址1a     ┃    段界限1   ┃
    86                              <1> ; ┣━━━╋━━━┳━━━╋━━━━━━━━━━━╋━━━━━━━┫
    87                              <1> ; ┃   %6 ┃  %5  ┃  %4  ┃  %3  ┃     %2       ┃       %1     ┃
    88                              <1> ; ┗━━━┻━━━┻━━━┻━━━┻━━━━━━━┻━━━━━━━┛
    89                              <1> ;         │                \_________
    90                              <1> ;         │                          \__________________
    91                              <1> ;         │                                             \________________________________________________
    93                              <1> ;         │                                                                                              ;         ┏━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳
    94                              <1> ;         ┃ 7  ┃ 6  ┃ 5  ┃ 4  ┃ 3  ┃ 2  ┃ 1  ┃ 0  ┃ 7  ┃ 6  ┃ 5  ┃ 4  ┃ 3  ┃ 2  ┃ 1  ┃ 0  ┃
    95                              <1> ;         ┣━━╋━━╋━━╋━━╋━━┻━━┻━━┻━━╋━━╋━━┻━━╋━━╋━━┻━━┻━━┻━━┫
    96                              <1> ;         ┃ G  ┃ D  ┃ 0  ┃ AVL┃   段界限 2 (19..16)  ┃  P ┃   DPL    ┃ S  ┃       TYPE           ┃
    97                              <1> ;         ┣━━┻━━┻━━┻━━╋━━━━━━━━━━━╋━━┻━━━━━┻━━┻━━━━━━━━━━━┫
    98                              <1> ;         ┃      ③: 属性 2      ┃    ②: 段界限 2      ┃                   ①: 属性1                  ┃
    99                              <1> ;         ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━┛
   100                              <1> ;       高地址                                                                                          低地址
   101                              <1> ;
   102                              <1> ;
   103                              <1> 
   104                              <1> ; 说明:
   105                              <1> ;
   106                              <1> ; (1) P:    存在(Present)位。
   107                              <1> ;		P=1 表示描述符对地址转换是有效的，或者说该描述符所描述的段存在，即在内存中；
   108                              <1> ;		P=0 表示描述符对地址转换无效，即该段不存在。使用该描述符进行内存访问时会引起异常。
   109                              <1> ;
   110                              <1> ; (2) DPL:  表示描述符特权级(Descriptor Privilege level)，共2位。它规定了所描述段的特权级，用于特权检查，以决定对该段能否访问。 
   111                              <1> ;
   112                              <1> ; (3) S:   说明描述符的类型。
   113                              <1> ;		对于存储段描述符而言，S=1，以区别与系统段描述符和门描述符(S=0)。 
   114                              <1> ;
   115                              <1> ; (4) TYPE: 说明存储段描述符所描述的存储段的具体属性。
   116                              <1> ;
   117                              <1> ;		 
   118                              <1> ;	数据段类型	类型值		说明
   119                              <1> ;			----------------------------------
   120                              <1> ;			0		只读 
   121                              <1> ;			1		只读、已访问 
   122                              <1> ;			2		读/写 
   123                              <1> ;			3		读/写、已访问 
   124                              <1> ;			4		只读、向下扩展 
   125                              <1> ;			5		只读、向下扩展、已访问 
   126                              <1> ;			6		读/写、向下扩展 
   127                              <1> ;			7		读/写、向下扩展、已访问 
   128                              <1> ;
   129                              <1> ;		
   130                              <1> ;			类型值		说明
   131                              <1> ;	代码段类型	----------------------------------
   132                              <1> ;			8		只执行 
   133                              <1> ;			9		只执行、已访问 
   134                              <1> ;			A		执行/读 
   135                              <1> ;			B		执行/读、已访问 
   136                              <1> ;			C		只执行、一致码段 
   137                              <1> ;			D		只执行、一致码段、已访问 
   138                              <1> ;			E		执行/读、一致码段 
   139                              <1> ;			F		执行/读、一致码段、已访问 
   140                              <1> ;
   141                              <1> ;		
   142                              <1> ;	系统段类型	类型编码	说明
   143                              <1> ;			----------------------------------
   144                              <1> ;			0		<未定义>
   145                              <1> ;			1		可用286TSS
   146                              <1> ;			2		LDT
   147                              <1> ;			3		忙的286TSS
   148                              <1> ;			4		286调用门
   149                              <1> ;			5		任务门
   150                              <1> ;			6		286中断门
   151                              <1> ;			7		286陷阱门
   152                              <1> ;			8		未定义
   153                              <1> ;			9		可用386TSS
   154                              <1> ;			A		<未定义>
   155                              <1> ;			B		忙的386TSS
   156                              <1> ;			C		386调用门
   157                              <1> ;			D		<未定义>
   158                              <1> ;			E		386中断门
   159                              <1> ;			F		386陷阱门
   160                              <1> ;
   161                              <1> ; (5) G:    段界限粒度(Granularity)位。
   162                              <1> ;		G=0 表示界限粒度为字节；
   163                              <1> ;		G=1 表示界限粒度为4K 字节。
   164                              <1> ;           注意，界限粒度只对段界限有效，对段基地址无效，段基地址总是以字节为单位。 
   165                              <1> ;
   166                              <1> ; (6) D:    D位是一个很特殊的位，在描述可执行段、向下扩展数据段或由SS寄存器寻址的段(通常是堆栈段)的三种描述符中的意义各不相同。 
   167                              <1> ;           ⑴ 在描述可执行段的描述符中，D位决定了指令使用的地址及操作数所默认的大小。
   168                              <1> ;		① D=1表示默认情况下指令使用32位地址及32位或8位操作数，这样的代码段也称为32位代码段；
   169                              <1> ;		② D=0 表示默认情况下，使用16位地址及16位或8位操作数，这样的代码段也称为16位代码段，它与80286兼容。可以使用地址大小前缀和操作数大小前缀分别改变默认的地址或操作数的大小。 
   170                              <1> ;           ⑵ 在向下扩展数据段的描述符中，D位决定段的上部边界。
   171                              <1> ;		① D=1表示段的上部界限为4G；
   172                              <1> ;		② D=0表示段的上部界限为64K，这是为了与80286兼容。 
   173                              <1> ;           ⑶ 在描述由SS寄存器寻址的段描述符中，D位决定隐式的堆栈访问指令(如PUSH和POP指令)使用何种堆栈指针寄存器。
   174                              <1> ;		① D=1表示使用32位堆栈指针寄存器ESP；
   175                              <1> ;		② D=0表示使用16位堆栈指针寄存器SP，这与80286兼容。 
   176                              <1> ;
   177                              <1> ; (7) AVL:  软件可利用位。80386对该位的使用未左规定，Intel公司也保证今后开发生产的处理器只要与80386兼容，就不会对该位的使用做任何定义或规定。 
   178                              <1> ;
   179                              <1> 
   180                              <1> 
   181                              <1> ;----------------------------------------------------------------------------
   182                              <1> ; 在下列类型值命名中：
   183                              <1> ;       DA_  : Descriptor Attribute
   184                              <1> ;       D    : 数据段
   185                              <1> ;       C    : 代码段
   186                              <1> ;       S    : 系统段
   187                              <1> ;       R    : 只读
   188                              <1> ;       RW   : 读写
   189                              <1> ;       A    : 已访问
   190                              <1> ;       其它 : 可按照字面意思理解
   191                              <1> ;----------------------------------------------------------------------------
   192                              <1> 
   193                              <1> ; 描述符类型
   194                              <1> DA_32		EQU	4000h	; 32 位段
   195                              <1> 
   196                              <1> DA_DPL0		EQU	  00h	; DPL = 0
   197                              <1> DA_DPL1		EQU	  20h	; DPL = 1
   198                              <1> DA_DPL2		EQU	  40h	; DPL = 2
   199                              <1> DA_DPL3		EQU	  60h	; DPL = 3
   200                              <1> 
   201                              <1> ; 存储段描述符类型
   202                              <1> DA_DR		EQU	90h	; 存在的只读数据段类型值
   203                              <1> DA_DRW		EQU	92h	; 存在的可读写数据段属性值
   204                              <1> DA_DRWA		EQU	93h	; 存在的已访问可读写数据段类型值
   205                              <1> DA_C		EQU	98h	; 存在的只执行代码段属性值
   206                              <1> DA_CR		EQU	9Ah	; 存在的可执行可读代码段属性值
   207                              <1> DA_CCO		EQU	9Ch	; 存在的只执行一致代码段属性值
   208                              <1> DA_CCOR		EQU	9Eh	; 存在的可执行可读一致代码段属性值
   209                              <1> 
   210                              <1> ; 系统段描述符类型
   211                              <1> DA_LDT		EQU	  82h	; 局部描述符表段类型值
   212                              <1> DA_TaskGate	EQU	  85h	; 任务门类型值
   213                              <1> DA_386TSS	EQU	  89h	; 可用 386 任务状态段类型值
   214                              <1> DA_386CGate	EQU	  8Ch	; 386 调用门类型值
   215                              <1> DA_386IGate	EQU	  8Eh	; 386 中断门类型值
   216                              <1> DA_386TGate	EQU	  8Fh	; 386 陷阱门类型值
   217                              <1> 
   218                              <1> 
   219                              <1> ; 选择子图示:
   220                              <1> ;         ┏━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┓
   221                              <1> ;         ┃ 15 ┃ 14 ┃ 13 ┃ 12 ┃ 11 ┃ 10 ┃ 9  ┃ 8  ┃ 7  ┃ 6  ┃ 5  ┃ 4  ┃ 3  ┃ 2  ┃ 1  ┃ 0  ┃
   222                              <1> ;         ┣━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━╋━━╋━━┻━━┫
   223                              <1> ;         ┃                                 描述符索引                                 ┃ TI ┃   RPL    ┃
   224                              <1> ;         ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━┻━━━━━┛
   225                              <1> ;
   226                              <1> ; RPL(Requested Privilege Level): 请求特权级，用于特权检查。
   227                              <1> ;
   228                              <1> ; TI(Table Indicator): 引用描述符表指示位
   229                              <1> ;	TI=0 指示从全局描述符表GDT中读取描述符；
   230                              <1> ;	TI=1 指示从局部描述符表LDT中读取描述符。
   231                              <1> ;
   232                              <1> 
   233                              <1> ;----------------------------------------------------------------------------
   234                              <1> ; 选择子类型值说明
   235                              <1> ; 其中:
   236                              <1> ;       SA_  : Selector Attribute
   237                              <1> 
   238                              <1> SA_RPL0		EQU	0	; ┓
   239                              <1> SA_RPL1		EQU	1	; ┣ RPL
   240                              <1> SA_RPL2		EQU	2	; ┃
   241                              <1> SA_RPL3		EQU	3	; ┛
   242                              <1> 
   243                              <1> SA_TIG		EQU	0	; ┓TI
   244                              <1> SA_TIL		EQU	4	; ┛
   245                              <1> ;----------------------------------------------------------------------------
   246                              <1> 
   247                              <1> 
   248                              <1> 
   249                              <1> ; 宏 ------------------------------------------------------------------------------------------------------
   250                              <1> ;
   251                              <1> ; 描述符
   252                              <1> ; usage: Descriptor Base, Limit, Attr
   253                              <1> ;        Base:  dd
   254                              <1> ;        Limit: dd (low 20 bits available)
   255                              <1> ;        Attr:  dw (lower 4 bits of higher byte are always 0)
   256                              <1> %macro Descriptor 3
   257                              <1> 	dw	%2 & 0FFFFh				; 段界限1
   258                              <1> 	dw	%1 & 0FFFFh				; 段基址1
   259                              <1> 	db	(%1 >> 16) & 0FFh			; 段基址2
   260                              <1> 	dw	((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)	; 属性1 + 段界限2 + 属性2
   261                              <1> 	db	(%1 >> 24) & 0FFh			; 段基址3
   262                              <1> %endmacro ; 共 8 字节
   263                              <1> ;
   264                              <1> ; 门
   265                              <1> ; usage: Gate Selector, Offset, DCount, Attr
   266                              <1> ;        Selector:  dw
   267                              <1> ;        Offset:    dd
   268                              <1> ;        DCount:    db
   269                              <1> ;        Attr:      db
   270                              <1> %macro Gate 4
   271                              <1> 	dw	(%2 & 0FFFFh)				; 偏移1
   272                              <1> 	dw	%1					; 选择子
   273                              <1> 	dw	(%3 & 1Fh) | ((%4 << 8) & 0FF00h)	; 属性
   274                              <1> 	dw	((%2 >> 16) & 0FFFFh)			; 偏移2
   275                              <1> %endmacro ; 共 8 字节
   276                              <1> ; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     2                                  
     3                                  	org	0x7c00
     4 00000000 E9(3600)                	jmp	Entry
     5                                  
     6                                  ; Standard FAT12 floppy code
     7 00000003 90                      	DB	0x90
     8 00000004 425A4C4954434849        	DB	"BZLITCHI"		; 启动扇区名称（8字节）
     9 0000000C 0002                    	DW	512			; 每个扇区（sector）大小（必须512字节）
    10 0000000E 01                      	DB	1			; 簇（cluster）大小（必须为1个扇区）
    11 0000000F 0100                    	DW	1			; FAT起始位置（一般为第一个扇区）
    12 00000011 02                      	DB	2			; FAT个数（必须为2）
    13 00000012 E000                    	DW	224			; 根目录大小（一般为224项）
    14 00000014 400B                    	DW	2880			; 该磁盘大小（必须为2880扇区1440*1024/512）
    15 00000016 F0                      	DB	0xf0			; 磁盘类型（必须为0xf0）
    16 00000017 0900                    	DW	9			; FAT的长度（必??9扇区）
    17 00000019 1200                    	DW	18			; 一个磁道（track）有几个扇区（必须为18）
    18 0000001B 0200                    	DW	2			; 磁头数（必??2）
    19 0000001D 00000000                	DD	0			; 不使用分区，必须是0
    20 00000021 400B0000                	DD	2880			; 重写一次磁盘大小
    21 00000025 000029                  	DB	0,0,0x29		; 意义不明（固定）
    22 00000028 FFFFFFFF                	DD	0xffffffff		; （可能是）卷标号码
    23 0000002C 425A4C49544348494F-     	DB	"BZLITCHIOS "		; 磁盘的名称（11字，不足填空格）
    23 00000035 5320               
    24 00000037 4641543132202020        	DB	"FAT12   "		; 磁盘格式名称（8字，不足填空格）
    25 0000003F <res 00000012>          	RESB	18			; 先空出18字节
    25          ******************       warning: uninitialized space declared in .text section: zeroing [-w+other]
    26                                  
    27                                  [SECTION .gdt]
    28                                  ; GDT
    29                                  ;                              段基址,       段界限     , 属性
    30                                  LABEL_GDT:	   Descriptor       0,                0, 0           ; 空描述符
    30                              <1> LABEL_GDT: 
    30 00000000 0000                <1>  dw %2 & 0FFFFh
    30 00000002 0000                <1>  dw %1 & 0FFFFh
    30 00000004 00                  <1>  db (%1 >> 16) & 0FFh
    30 00000005 0000                <1>  dw ((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)
    30 00000007 00                  <1>  db (%1 >> 24) & 0FFh
    31                                  LABEL_DESC_CODE32: Descriptor       0, SegCode32Len - 1, DA_C + DA_32; 非一致代码段
    31                              <1> LABEL_DESC_CODE32: 
    31 00000008 1500                <1>  dw %2 & 0FFFFh
    31 0000000A 0000                <1>  dw %1 & 0FFFFh
    31 0000000C 00                  <1>  db (%1 >> 16) & 0FFh
    31 0000000D 9840                <1>  dw ((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)
    31 0000000F 00                  <1>  db (%1 >> 24) & 0FFh
    32                                  LABEL_DESC_VIDEO:  Descriptor 0B8000h,           0ffffh, DA_DRW	     ; 显存首地址
    32                              <1> LABEL_DESC_VIDEO: 
    32 00000010 FFFF                <1>  dw %2 & 0FFFFh
    32 00000012 0080                <1>  dw %1 & 0FFFFh
    32 00000014 0B                  <1>  db (%1 >> 16) & 0FFh
    32 00000015 9200                <1>  dw ((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)
    32 00000017 00                  <1>  db (%1 >> 24) & 0FFh
    33                                  ; GDT 结束
    34                                  
    35                                  GdtLen		equ	$ - LABEL_GDT	; GDT长度
    36 00000018 1700                    GdtPtr		dw	GdtLen - 1	; GDT界限
    37 0000001A 00000000                		dd	0		; GDT基地址
    38                                  
    39                                  ; GDT 选择子
    40                                  SelectorCode32		equ	LABEL_DESC_CODE32	- LABEL_GDT
    41                                  SelectorVideo		equ	LABEL_DESC_VIDEO	- LABEL_GDT
    42                                  ; END of [SECTION .gdt]
    43                                  
    44                                  [SECTION .s16]
    45                                  [BITS	16]
    46                                  
    47                                  DispStr:
    48 00000000 B80300                  	mov	ax, 0x0003
    49 00000003 CD10                    	int	0x10; clear screen
    50 00000005 B8[1800]                	mov	ax, BootMessage
    51 00000008 89C5                    	mov	bp, ax			; string address
    52 0000000A B91E00                  	mov	cx, 14+2+14		; string length
    53 0000000D B80113                  	mov	ax, 0x1301		; ah=0x13 (write string)
    54 00000010 BB0D00                  	mov	bx, 0x000d		; bh=0x00 (page), bl=0x0d (color)
    55 00000013 B200                    	mov	dl, 0			; row & col
    56 00000015 CD10                    	int	0x10
    57 00000017 C3                      	ret
    58                                  
    59                                  BootMessage:            
    60 00000018 48656C6C6F2C204C69-     	db 	"Hello, Litchi!"
    60 00000021 7463686921         
    61 00000026 0D                      	db 	0x0d			; cl
    62 00000027 0A                      	db 	0x0a			; rf
    63 00000028 427567656E5A68616F-     	db 	"BugenZhao 2020"
    63 00000031 2032303230         
    64                                  Entry:
    65 00000036 8CC8                    	mov	ax, cs
    66 00000038 8ED8                    	mov	ds, ax
    67 0000003A 8EC0                    	mov	es, ax
    68 0000003C 8ED0                    	mov	ss, ax
    69 0000003E BC0001                  	mov	sp, 0100h
    70 00000041 E8BCFF                  	call	DispStr
    71                                  
    72                                  	; 初始化 32 位代码段描述符
    73 00000044 6631C0                  	xor	eax, eax
    74 00000047 8CC8                    	mov	ax, cs
    75 00000049 66C1E004                	shl	eax, 4
    76 0000004D 6605[00000000]          	add	eax, LABEL_SEG_CODE32
    77 00000053 A3[0A00]                	mov	word [LABEL_DESC_CODE32 + 2], ax
    78 00000056 66C1E810                	shr	eax, 16
    79 0000005A A2[0C00]                	mov	byte [LABEL_DESC_CODE32 + 4], al
    80 0000005D 8826[0F00]              	mov	byte [LABEL_DESC_CODE32 + 7], ah
    81                                  
    82                                  	; 为加载 GDTR 作准备
    83 00000061 6631C0                  	xor	eax, eax
    84 00000064 8CD8                    	mov	ax, ds
    85 00000066 66C1E004                	shl	eax, 4
    86 0000006A 6605[00000000]          	add	eax, LABEL_GDT		; eax <- gdt 基地址
    87 00000070 66A3[1A00]              	mov	dword [GdtPtr + 2], eax	; [GdtPtr + 2] <- gdt 基地址
    88                                  
    89                                  	; 加载 GDTR
    90 00000074 0F0116[1800]            	lgdt	[GdtPtr]
    91                                  
    92                                  	; 关中断
    93 00000079 FA                      	cli
    94                                  
    95                                  	; 打开地址线A20
    96 0000007A E492                    	in	al, 92h
    97 0000007C 0C02                    	or	al, 00000010b
    98 0000007E E692                    	out	92h, al
    99                                  
   100                                  	; 准备切换到保护模式
   101 00000080 0F20C0                  	mov	eax, cr0
   102 00000083 6683C801                	or	eax, 1
   103 00000087 0F22C0                  	mov	cr0, eax
   104                                  
   105                                  	; 真正进入保护模式
   106 0000008A 66EA000000000800        	jmp	dword SelectorCode32:0	; 执行这一句会把 SelectorCode32 装入 cs,
   107                                  					; 并跳转到 Code32Selector:0  处
   108                                  ; END of [SECTION .s16]
   109                                  
   110                                  [SECTION .s32]; 32 位代码段. 由实模式跳入.
   111                                  [BITS	32]
   112                                  
   113                                  LABEL_SEG_CODE32:
   114 00000000 66B81000                	mov	ax, SelectorVideo
   115 00000004 8EE8                    	mov	gs, ax			; 视频段选择子(目的)
   116                                  
   117 00000006 BF30070000              	mov	edi, (80 * 11 + 40) * 2	; 屏幕第 11 行, 第 40 列。
   118 0000000B B40C                    	mov	ah, 0Ch			; 0000: 黑底    1100: 红字
   119 0000000D B050                    	mov	al, 'P'
   120 0000000F 65668907                	mov	[gs:edi], ax
   121                                  
   122                                  Fin:
   123                                  	; 到此停止
   124 00000013 F4                      	hlt
   125 00000014 EBFD                    	jmp	Fin
   126                                  
   127                                  SegCode32Len	equ	$ - LABEL_SEG_CODE32
   128                                  ; END of [SECTION .s32]
